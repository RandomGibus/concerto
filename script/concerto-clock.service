# systemd unit file
#
# Customize this file based on your bundler location, app directory, etc.
# Put this in /usr/lib/systemd/system (CentOS), /lib/systemd/system (Ubuntu), or etc/systemd/system (GitBash).
# Run:
#   - systemctl enable concerto-clock
#   - systemctl {start,stop,restart} concerto-clock
#
# See Inspeqtor's Systemd wiki page for more detail about Systemd:
# https://github.com/mperham/inspeqtor/wiki/Systemd
#
[Unit]
Description=concerto-clock
# start us only once the network and logging subsystems are available,
# consider adding redis-server.service if Redis is local and systemd-managed.
After=network.target

# See these pages for lots of options:
# http://0pointer.de/public/systemd-man/systemd.service.html
# http://0pointer.de/public/systemd-man/systemd.exec.html
[Service]
Type=simple
WorkingDirectory=/home/concerto-admin/concerto
ExecStart=/bin/bash -lc '/home/concerto-admin/.rbenv/shims/bundle exec clockwork lib/cron.rb'
User=concerto-admin
Group=concerto-admin
Environment=RAILS_ENV=production PORT=8000
UMask=0002

# if we crash, restart
RestartSec=5
Restart=on-failure

# output goes to /var/log/syslog
StandardOutput=journal
StandardError=journal

# This will default to "bundler" if we don't specify it
SyslogIdentifier=concerto-clock

[Install]
WantedBy=multi-user.target
